/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenAiApi);
  }
}(this, function(expect, OpenAiApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ChatCompletionRole', function() {
      beforeEach(function() {
        instance = OpenAiApi.ChatCompletionRole;
      });

      it('should create an instance of ChatCompletionRole', function() {
        // TODO: update the code to test ChatCompletionRole
        expect(instance).to.be.a('object');
      });

      it('should have the property system', function() {
        expect(instance).to.have.property('system');
        expect(instance.system).to.be("system");
      });

      it('should have the property user', function() {
        expect(instance).to.have.property('user');
        expect(instance.user).to.be("user");
      });

      it('should have the property assistant', function() {
        expect(instance).to.have.property('assistant');
        expect(instance.assistant).to.be("assistant");
      });

      it('should have the property tool', function() {
        expect(instance).to.have.property('tool');
        expect(instance.tool).to.be("tool");
      });

      it('should have the property _function', function() {
        expect(instance).to.have.property('_function');
        expect(instance._function).to.be("function");
      });

    });
  });

}));
