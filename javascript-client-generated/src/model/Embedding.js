/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The Embedding model module.
 * @module model/Embedding
 * @version 2.0.0
 */
export class Embedding {
  /**
   * Constructs a new <code>Embedding</code>.
   * Represents an embedding vector returned by embedding endpoint. 
   * @alias module:model/Embedding
   * @class
   * @param index {Number} The index of the embedding in the list of embeddings.
   * @param embedding {Array.<Number>} The embedding vector, which is a list of floats. The length of vector depends on the model as listed in the [embedding guide](/docs/guides/embeddings). 
   * @param _object {module:model/Embedding.ObjectEnum} The object type, which is always \"embedding\".
   */
  constructor(index, embedding, _object) {
    this.index = index;
    this.embedding = embedding;
    this._object = _object;
  }

  /**
   * Constructs a <code>Embedding</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Embedding} obj Optional instance to populate.
   * @return {module:model/Embedding} The populated <code>Embedding</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Embedding();
      if (data.hasOwnProperty('index'))
        obj.index = ApiClient.convertToType(data['index'], 'Number');
      if (data.hasOwnProperty('embedding'))
        obj.embedding = ApiClient.convertToType(data['embedding'], ['Number']);
      if (data.hasOwnProperty('object'))
        obj._object = ApiClient.convertToType(data['object'], 'String');
    }
    return obj;
  }
}

/**
 * The index of the embedding in the list of embeddings.
 * @member {Number} index
 */
Embedding.prototype.index = undefined;

/**
 * The embedding vector, which is a list of floats. The length of vector depends on the model as listed in the [embedding guide](/docs/guides/embeddings). 
 * @member {Array.<Number>} embedding
 */
Embedding.prototype.embedding = undefined;

/**
 * Allowed values for the <code>_object</code> property.
 * @enum {String}
 * @readonly
 */
Embedding.ObjectEnum = {
  /**
   * value: "embedding"
   * @const
   */
  embedding: "embedding"
};
/**
 * The object type, which is always \"embedding\".
 * @member {module:model/Embedding.ObjectEnum} _object
 */
Embedding.prototype._object = undefined;

