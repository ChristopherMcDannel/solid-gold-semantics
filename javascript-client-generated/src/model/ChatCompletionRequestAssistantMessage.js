/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {ChatCompletionMessageToolCalls} from './ChatCompletionMessageToolCalls';
import {ChatCompletionRequestAssistantMessageFunctionCall} from './ChatCompletionRequestAssistantMessageFunctionCall';

/**
 * The ChatCompletionRequestAssistantMessage model module.
 * @module model/ChatCompletionRequestAssistantMessage
 * @version 2.0.0
 */
export class ChatCompletionRequestAssistantMessage {
  /**
   * Constructs a new <code>ChatCompletionRequestAssistantMessage</code>.
   * @alias module:model/ChatCompletionRequestAssistantMessage
   * @class
   * @param content {String} The contents of the assistant message. 
   * @param role {module:model/ChatCompletionRequestAssistantMessage.RoleEnum} The role of the messages author, in this case `assistant`.
   */
  constructor(content, role) {
    this.content = content;
    this.role = role;
  }

  /**
   * Constructs a <code>ChatCompletionRequestAssistantMessage</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChatCompletionRequestAssistantMessage} obj Optional instance to populate.
   * @return {module:model/ChatCompletionRequestAssistantMessage} The populated <code>ChatCompletionRequestAssistantMessage</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ChatCompletionRequestAssistantMessage();
      if (data.hasOwnProperty('content'))
        obj.content = ApiClient.convertToType(data['content'], 'String');
      if (data.hasOwnProperty('role'))
        obj.role = ApiClient.convertToType(data['role'], 'String');
      if (data.hasOwnProperty('tool_calls'))
        obj.toolCalls = ChatCompletionMessageToolCalls.constructFromObject(data['tool_calls']);
      if (data.hasOwnProperty('function_call'))
        obj.functionCall = ChatCompletionRequestAssistantMessageFunctionCall.constructFromObject(data['function_call']);
    }
    return obj;
  }
}

/**
 * The contents of the assistant message. 
 * @member {String} content
 */
ChatCompletionRequestAssistantMessage.prototype.content = undefined;

/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
ChatCompletionRequestAssistantMessage.RoleEnum = {
  /**
   * value: "assistant"
   * @const
   */
  assistant: "assistant"
};
/**
 * The role of the messages author, in this case `assistant`.
 * @member {module:model/ChatCompletionRequestAssistantMessage.RoleEnum} role
 */
ChatCompletionRequestAssistantMessage.prototype.role = undefined;

/**
 * @member {module:model/ChatCompletionMessageToolCalls} toolCalls
 */
ChatCompletionRequestAssistantMessage.prototype.toolCalls = undefined;

/**
 * @member {module:model/ChatCompletionRequestAssistantMessageFunctionCall} functionCall
 */
ChatCompletionRequestAssistantMessage.prototype.functionCall = undefined;

// Implement ChatCompletionRequestMessage interface:
