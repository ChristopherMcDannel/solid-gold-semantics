/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The ChatCompletionRequestMessageContentPartText model module.
 * @module model/ChatCompletionRequestMessageContentPartText
 * @version 2.0.0
 */
export class ChatCompletionRequestMessageContentPartText {
  /**
   * Constructs a new <code>ChatCompletionRequestMessageContentPartText</code>.
   * @alias module:model/ChatCompletionRequestMessageContentPartText
   * @class
   * @param type {module:model/ChatCompletionRequestMessageContentPartText.TypeEnum} The type of the content part.
   * @param text {String} The text content.
   */
  constructor(type, text) {
    this.type = type;
    this.text = text;
  }

  /**
   * Constructs a <code>ChatCompletionRequestMessageContentPartText</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChatCompletionRequestMessageContentPartText} obj Optional instance to populate.
   * @return {module:model/ChatCompletionRequestMessageContentPartText} The populated <code>ChatCompletionRequestMessageContentPartText</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ChatCompletionRequestMessageContentPartText();
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('text'))
        obj.text = ApiClient.convertToType(data['text'], 'String');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ChatCompletionRequestMessageContentPartText.TypeEnum = {
  /**
   * value: "text"
   * @const
   */
  text: "text"
};
/**
 * The type of the content part.
 * @member {module:model/ChatCompletionRequestMessageContentPartText.TypeEnum} type
 */
ChatCompletionRequestMessageContentPartText.prototype.type = undefined;

/**
 * The text content.
 * @member {String} text
 */
ChatCompletionRequestMessageContentPartText.prototype.text = undefined;

// Implement ChatCompletionRequestMessageContentPart interface:
