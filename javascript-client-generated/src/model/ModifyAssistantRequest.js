/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The ModifyAssistantRequest model module.
 * @module model/ModifyAssistantRequest
 * @version 2.0.0
 */
export class ModifyAssistantRequest {
  /**
   * Constructs a new <code>ModifyAssistantRequest</code>.
   * @alias module:model/ModifyAssistantRequest
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ModifyAssistantRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ModifyAssistantRequest} obj Optional instance to populate.
   * @return {module:model/ModifyAssistantRequest} The populated <code>ModifyAssistantRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ModifyAssistantRequest();
      if (data.hasOwnProperty('model'))
        obj.model = ApiClient.convertToType(data['model'], Object);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('instructions'))
        obj.instructions = ApiClient.convertToType(data['instructions'], 'String');
      if (data.hasOwnProperty('tools'))
        obj.tools = ApiClient.convertToType(data['tools'], [OneOfModifyAssistantRequestToolsItems]);
      if (data.hasOwnProperty('file_ids'))
        obj.fileIds = ApiClient.convertToType(data['file_ids'], ['String']);
      if (data.hasOwnProperty('metadata'))
        obj.metadata = ApiClient.convertToType(data['metadata'], Object);
    }
    return obj;
  }
}

/**
 * ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them. 
 * @member {Object} model
 */
ModifyAssistantRequest.prototype.model = undefined;

/**
 * The name of the assistant. The maximum length is 256 characters. 
 * @member {String} name
 */
ModifyAssistantRequest.prototype.name = undefined;

/**
 * The description of the assistant. The maximum length is 512 characters. 
 * @member {String} description
 */
ModifyAssistantRequest.prototype.description = undefined;

/**
 * The system instructions that the assistant uses. The maximum length is 32768 characters. 
 * @member {String} instructions
 */
ModifyAssistantRequest.prototype.instructions = undefined;

/**
 * A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `retrieval`, or `function`. 
 * @member {Array.<Object>} tools
 */
ModifyAssistantRequest.prototype.tools = undefined;

/**
 * A list of [File](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order. If a file was previosuly attached to the list but does not show up in the list, it will be deleted from the assistant. 
 * @member {Array.<String>} fileIds
 */
ModifyAssistantRequest.prototype.fileIds = undefined;

/**
 * Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long. 
 * @member {Object} metadata
 */
ModifyAssistantRequest.prototype.metadata = undefined;

