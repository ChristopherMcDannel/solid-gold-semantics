/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CreateFineTuningJobRequestHyperparameters} from './CreateFineTuningJobRequestHyperparameters';

/**
 * The CreateFineTuningJobRequest model module.
 * @module model/CreateFineTuningJobRequest
 * @version 2.0.0
 */
export class CreateFineTuningJobRequest {
  /**
   * Constructs a new <code>CreateFineTuningJobRequest</code>.
   * @alias module:model/CreateFineTuningJobRequest
   * @class
   * @param model {Object} The name of the model to fine-tune. You can select one of the [supported models](/docs/guides/fine-tuning/what-models-can-be-fine-tuned). 
   * @param trainingFile {String} The ID of an uploaded file that contains training data.  See [upload file](/docs/api-reference/files/upload) for how to upload a file.  Your dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose `fine-tune`.  See the [fine-tuning guide](/docs/guides/fine-tuning) for more details. 
   */
  constructor(model, trainingFile) {
    this.model = model;
    this.trainingFile = trainingFile;
  }

  /**
   * Constructs a <code>CreateFineTuningJobRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateFineTuningJobRequest} obj Optional instance to populate.
   * @return {module:model/CreateFineTuningJobRequest} The populated <code>CreateFineTuningJobRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CreateFineTuningJobRequest();
      if (data.hasOwnProperty('model'))
        obj.model = ApiClient.convertToType(data['model'], Object);
      if (data.hasOwnProperty('training_file'))
        obj.trainingFile = ApiClient.convertToType(data['training_file'], 'String');
      if (data.hasOwnProperty('hyperparameters'))
        obj.hyperparameters = CreateFineTuningJobRequestHyperparameters.constructFromObject(data['hyperparameters']);
      if (data.hasOwnProperty('suffix'))
        obj.suffix = ApiClient.convertToType(data['suffix'], 'String');
      if (data.hasOwnProperty('validation_file'))
        obj.validationFile = ApiClient.convertToType(data['validation_file'], 'String');
    }
    return obj;
  }
}

/**
 * The name of the model to fine-tune. You can select one of the [supported models](/docs/guides/fine-tuning/what-models-can-be-fine-tuned). 
 * @member {Object} model
 */
CreateFineTuningJobRequest.prototype.model = undefined;

/**
 * The ID of an uploaded file that contains training data.  See [upload file](/docs/api-reference/files/upload) for how to upload a file.  Your dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose `fine-tune`.  See the [fine-tuning guide](/docs/guides/fine-tuning) for more details. 
 * @member {String} trainingFile
 */
CreateFineTuningJobRequest.prototype.trainingFile = undefined;

/**
 * @member {module:model/CreateFineTuningJobRequestHyperparameters} hyperparameters
 */
CreateFineTuningJobRequest.prototype.hyperparameters = undefined;

/**
 * A string of up to 18 characters that will be added to your fine-tuned model name.  For example, a `suffix` of \"custom-model-name\" would produce a model name like `ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel`. 
 * @member {String} suffix
 */
CreateFineTuningJobRequest.prototype.suffix = undefined;

/**
 * The ID of an uploaded file that contains validation data.  If you provide this file, the data is used to generate validation metrics periodically during fine-tuning. These metrics can be viewed in the fine-tuning results file. The same data should not be present in both train and validation files.  Your dataset must be formatted as a JSONL file. You must upload your file with the purpose `fine-tune`.  See the [fine-tuning guide](/docs/guides/fine-tuning) for more details. 
 * @member {String} validationFile
 */
CreateFineTuningJobRequest.prototype.validationFile = undefined;

