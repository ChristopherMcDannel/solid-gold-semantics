/*
 * OpenAI API
 * The OpenAI REST API. Please see https://platform.openai.com/docs/api-reference for more details.
 *
 * OpenAPI spec version: 2.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.50
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {CreateFineTuningJobRequest} from '../model/CreateFineTuningJobRequest';
import {FineTuningJob} from '../model/FineTuningJob';
import {ListFineTuningJobEventsResponse} from '../model/ListFineTuningJobEventsResponse';
import {ListPaginatedFineTuningJobsResponse} from '../model/ListPaginatedFineTuningJobsResponse';

/**
* FineTuning service.
* @module api/FineTuningApi
* @version 2.0.0
*/
export class FineTuningApi {

    /**
    * Constructs a new FineTuningApi. 
    * @alias module:api/FineTuningApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the cancelFineTuningJob operation.
     * @callback moduleapi/FineTuningApi~cancelFineTuningJobCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FineTuningJob{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Immediately cancel a fine-tune job. 
     * @param {String} fineTuningJobId The ID of the fine-tuning job to cancel. 
     * @param {module:api/FineTuningApi~cancelFineTuningJobCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    cancelFineTuningJob(fineTuningJobId, callback) {
      
      let postBody = null;
      // verify the required parameter 'fineTuningJobId' is set
      if (fineTuningJobId === undefined || fineTuningJobId === null) {
        throw new Error("Missing the required parameter 'fineTuningJobId' when calling cancelFineTuningJob");
      }

      let pathParams = {
        'fine_tuning_job_id': fineTuningJobId
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FineTuningJob;

      return this.apiClient.callApi(
        '/fine_tuning/jobs/{fine_tuning_job_id}/cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the createFineTuningJob operation.
     * @callback moduleapi/FineTuningApi~createFineTuningJobCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FineTuningJob{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about fine-tuning](/docs/guides/fine-tuning) 
     * @param {module:model/CreateFineTuningJobRequest} body 
     * @param {module:api/FineTuningApi~createFineTuningJobCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    createFineTuningJob(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createFineTuningJob");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = FineTuningJob;

      return this.apiClient.callApi(
        '/fine_tuning/jobs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the listFineTuningEvents operation.
     * @callback moduleapi/FineTuningApi~listFineTuningEventsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListFineTuningJobEventsResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get status updates for a fine-tuning job. 
     * @param {String} fineTuningJobId The ID of the fine-tuning job to get events for. 
     * @param {Object} opts Optional parameters
     * @param {String} opts.after Identifier for the last event from the previous pagination request.
     * @param {Number} opts.limit Number of events to retrieve. (default to <.>)
     * @param {module:api/FineTuningApi~listFineTuningEventsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    listFineTuningEvents(fineTuningJobId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'fineTuningJobId' is set
      if (fineTuningJobId === undefined || fineTuningJobId === null) {
        throw new Error("Missing the required parameter 'fineTuningJobId' when calling listFineTuningEvents");
      }

      let pathParams = {
        'fine_tuning_job_id': fineTuningJobId
      };
      let queryParams = {
        'after': opts['after'],'limit': opts['limit']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListFineTuningJobEventsResponse;

      return this.apiClient.callApi(
        '/fine_tuning/jobs/{fine_tuning_job_id}/events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the listPaginatedFineTuningJobs operation.
     * @callback moduleapi/FineTuningApi~listPaginatedFineTuningJobsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListPaginatedFineTuningJobsResponse{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List your organization&#x27;s fine-tuning jobs 
     * @param {Object} opts Optional parameters
     * @param {String} opts.after Identifier for the last job from the previous pagination request.
     * @param {Number} opts.limit Number of fine-tuning jobs to retrieve. (default to <.>)
     * @param {module:api/FineTuningApi~listPaginatedFineTuningJobsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    listPaginatedFineTuningJobs(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'after': opts['after'],'limit': opts['limit']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListPaginatedFineTuningJobsResponse;

      return this.apiClient.callApi(
        '/fine_tuning/jobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the retrieveFineTuningJob operation.
     * @callback moduleapi/FineTuningApi~retrieveFineTuningJobCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FineTuningJob{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get info about a fine-tuning job.  [Learn more about fine-tuning](/docs/guides/fine-tuning) 
     * @param {String} fineTuningJobId The ID of the fine-tuning job. 
     * @param {module:api/FineTuningApi~retrieveFineTuningJobCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    retrieveFineTuningJob(fineTuningJobId, callback) {
      
      let postBody = null;
      // verify the required parameter 'fineTuningJobId' is set
      if (fineTuningJobId === undefined || fineTuningJobId === null) {
        throw new Error("Missing the required parameter 'fineTuningJobId' when calling retrieveFineTuningJob");
      }

      let pathParams = {
        'fine_tuning_job_id': fineTuningJobId
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = FineTuningJob;

      return this.apiClient.callApi(
        '/fine_tuning/jobs/{fine_tuning_job_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}